tosca_definitions_version: cloudify_dsl_1_2

imports:
    - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
    - http://www.getcloudify.org/spec/openstack-plugin/1.3.1/plugin.yaml
    - http://www.getcloudify.org/spec/fabric-plugin/1.3.1/plugin.yaml
    - plugins/cloudify-fortinet-plugin/plugin.yaml
    - https://raw.githubusercontent.com/cloudify-examples/cloudify-proxy-plugin/master/plugin.yaml

inputs:

  agent_user:
    default: admin
  fortinet_image:
    default: ''
  flavor:
    default: ''
  agent_password:
    default: admin

  lb_network1:
      type: string
      description: Network resource id to LB
  lb_network1_subnet:
      type: string
      description: Network subnet resource id to LB

  app_network2:
        type: string
        description: Network resource id to Application
  app_network2_subnet:
      type: string
        description: Network subnet resource id to Application

node_types:

  fortinet.port.config:
    derived_from: cloudify.nodes.SoftwareComponent
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
           implementation: fortinet.fortinet_plugin.tasks.port_config
           executor: central_deployment_agent

  fortinet.policy.config:
    derived_from: cloudify.nodes.SoftwareComponent
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
           implementation: fortinet.fortinet_plugin.tasks.policy_config
           executor: central_deployment_agent

node_templates:

  FortinetHost:
    type: cloudify.openstack.nodes.Server
    properties:
      install_agent: false
      image: { get_input: fortinet_image }
      flavor: { get_input: flavor }
    relationships:
      - target: lb_network1_port
        type: cloudify.openstack.server_connected_to_port
      - target: app_network2_port
        type: cloudify.openstack.server_connected_to_port

  FortinetPortConfig:
    type: fortinet.port.config
    relationships:
      - target: lb_network1_port
        type: cloudify.openstack.server_connected_to_port
      - target: app_network2_port
        type: cloudify.openstack.server_connected_to_port
      - target: FortinetHost
        type: cloudify.relationships.contained_in

  FortinetPolicyConfig:
    type: fortinet.policy.config
    relationships:
      - target: FortinetHost
        type: cloudify.relationships.contained_in


#  LB network

  lb_network1:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: lb_network1 }
      use_external_resource : true

  lb_network1_lb_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: lb_network1_subnet }
      use_external_resource : true
    relationships:
      - target: lb_network1
        type: cloudify.relationships.contained_in

  lb_network1_port:
    type: cloudify.openstack.nodes.Port
    properties:
      use_external_resource : false
    relationships:
      - type: cloudify.relationships.contained_in
        target: lb_network1
      - type: cloudify.relationships.depends_on
        target: lb_network1_subnet


#  APP network

  app_network2:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: app_network2 }
      use_external_resource : true

  app_network2_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: app_network2_subnet }
      use_external_resource : true
    relationships:
      - target: app_network2
        type: cloudify.relationships.contained_in

  app_network2_port:
    type: cloudify.openstack.nodes.Port
    properties:
      use_external_resource : false
    relationships:
      - type: cloudify.relationships.contained_in
        target: app_network2
      - type: cloudify.relationships.depends_on
        target: app_network2_subnet

