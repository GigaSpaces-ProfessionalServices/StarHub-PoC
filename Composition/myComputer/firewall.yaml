tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.3.1/plugin.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.3.1/plugin.yaml

inputs:
  image_id:
      default: '13391e9d-ca48-471f-9e1c-0151662a8a60'
      type: string

  flavor_id:
      default: '196235bc-7ca5-4085-ac81-7e0242bda3f9'
      type: string

# inpute from composition
  lb_network:
    type: string
    default: Tenant-a-LBnetwork

# inpute from composition
  lb_network_subnet:
    type: string
    default: Tenant-a-LBnetwork-subnet

# inpute from composition
  app_network:
    type: string
    default: Tenant-a-APPnetwork

# inpute from composition
  app_network_subnet:
    type: string
    default: Tenant-a-APPnetwork-subnet

  external_network_name:
    type: string
    default: VIO-External-01_VLAN301

  management_network_name:
     type: string
     default: cloudify-management-network

node_templates:

# Create Server

  fortinetServer:
    type: cloudify.openstack.nodes.Server
    properties:
      server:
        image: { get_input: image_id }
        flavor: { get_input: flavor_id }
    interfaces:
      cloudify.interfaces.lifecycle:
       create:
         inputs:
           args:
             nics:
                - net-id: { get_attribute: [ management_network, external_id ] }
                - net-id: { get_attribute: [ lb_network, external_id ] }
                - net-id: { get_attribute: [ app_network, external_id ] }

    relationships:
      - target: lb_network
        type: cloudify.relationships.connected_to
      - target: app_network
        type: cloudify.relationships.connected_to


#  LB network

  lb_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: lb_network }
      use_external_resource : false #true

  lb_network_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: lb_network_subnet }
      use_external_resource : false #true
      subnet:
        ip_version: 4
        cidr: 172.30.0.0/24
    relationships:
      - target: lb_network
        type: cloudify.relationships.contained_in

  lb_network_port:
    type: cloudify.openstack.nodes.Port
    properties:
      use_external_resource : false
    relationships:
      - type: cloudify.relationships.contained_in
        target: lb_network
      - type: cloudify.relationships.depends_on
        target: lb_network_subnet

#  APP network

  app_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: app_network }
      use_external_resource : false #true

  app_network_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: app_network_subnet }
      use_external_resource : false #true
      subnet:
        ip_version: 4
        cidr: 172.20.0.0/29
    relationships:
      - target: app_network
        type: cloudify.relationships.contained_in

  app_network_port:
    type: cloudify.openstack.nodes.Port
    properties:
      use_external_resource : false
    relationships:
      - type: cloudify.relationships.contained_in
        target: app_network
      - type: cloudify.relationships.depends_on
        target: app_network_subnet

  server_float_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: { get_input: external_network_name }

  management_network:
    type: cloudify.openstack.nodes.Network
    properties:
      use_external_resource: true
      resource_id: { get_input: management_network_name }
