tosca_definitions_version: cloudify_dsl_1_2

imports:
    - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
    - http://www.getcloudify.org/spec/openstack-plugin/1.3.1/plugin.yaml
    - http://www.getcloudify.org/spec/fabric-plugin/1.3.1/plugin.yaml
    - plugins/cloudify-vtm-plugin/plugin.yaml
    - https://raw.githubusercontent.com/cloudify-examples/cloudify-proxy-plugin/master/plugin.yaml

inputs:

  agent_user:
    default: admin
  vtm_image:
    default: ''
  flavor:
    default: ''
  agent_password:
    default: admin
  external_network_name:
    default: ''
  lb_network1:
      type: string
      description: Network resource id to LB
  lb_network1_subnet:
      type: string
      description: Network subnet resource id to LB
  vm_list:
      type: string

node_types:

  vtm.port.config:
    derived_from: cloudify.nodes.SoftwareComponent
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
           implementation: vtm.vtm_plugin.tasks.port_config
           executor: central_deployment_agent

  vtm.policy.config:
    derived_from: cloudify.nodes.SoftwareComponent
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
           implementation: vtm.vtm_plugin.tasks.policy_config
           executor: central_deployment_agent

node_templates:

  vtmHost:
    type: cloudify.openstack.nodes.Server
    properties:
      install_agent: false
      image: { get_input: vtm_image }
      flavor: { get_input: flavor }
    relationships:
      - target: lb_network1_port
        type: cloudify.openstack.server_connected_to_port
      - target: external_network1
        type: cloudify.relationships.connected_to

  vtmPortConfig:
    type: vtm.port.config
    relationships:
      - target: lb_network1_port
        type: cloudify.relationships.connected_to
      - target: vtmHost
        type: cloudify.relationships.contained_in

  vtmPolicyConfig:
    type: vtm.policy.config
    relationships:
      - target: vtmHost
        type: cloudify.relationships.contained_in

#  external network

  external_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: external_network_name }
      use_external_resource : true

#  LB network

  lb_network1:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: lb_network1 }
      use_external_resource : true

  lb_network1_lb_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: lb_network1_subnet }
      use_external_resource : true
    relationships:
      - target: lb_network1
        type: cloudify.relationships.contained_in

  lb_network1_port:
    type: cloudify.openstack.nodes.Port
    properties:
      use_external_resource : false
    relationships:
      - type: cloudify.relationships.contained_in
        target: lb_network1
      - type: cloudify.relationships.depends_on
        target: lb_network1_subnet
