tosca_definitions_version: cloudify_dsl_1_2

imports:
    - http://www.getcloudify.org/spec/cloudify/3.3/types.yaml
    - http://www.getcloudify.org/spec/openstack-plugin/1.3/plugin.yaml
    - http://www.getcloudify.org/spec/fabric-plugin/1.3/plugin.yaml
    - plugins/cloudify-fortinet-plugin/plugin.yaml

inputs:

  agent_user:
    default: admin
  fortinet_image:
    default: ''
  ce_image:
    default: ''
  flavor:
    default: ''
  agent_password:
    default: ''
  external_network_name:
    default: ''
  lan_network_name:
    default: ''
  lan_network_subnet_name:
    default: ''
  lan_network_port_name:
    default: ''

node_templates:

node_types:

  fortinet.port.config:
    derived_from: cloudify.nodes.SoftwareComponent
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
           implementation: fortinet.fortinet_plugin.tasks.port_config
           executor: central_deployment_agent

  fortinet.static.route:
    derived_from: cloudify.nodes.SoftwareComponent

node_templates:

  FortinetHost:
    type: cloudify.openstack.nodes.Server
    properties:
      install_agent: false
      image: { get_input: fortinet_image }
      flavor: { get_input: flavor }
    relationships:
      - target: admin_managment_ip
        type: cloudify.openstack.server_connected_to_floating_ip
      - target: lan_network_port
        type: cloudify.openstack.server_connected_to_port
      - target: external_network_port
        type: cloudify.openstack.server_connected_to_port

  FortinetPortConfig:
    type: fortinet.port.config
    relationships:
      - target: lan_network_port
        type: cloudify.relationships.connected_to
      - target: external_network_port
        type: cloudify.relationships.connected_to
      - target: FortinetHost
        type: cloudify.relationships.contained_in

  FortinetStaticRouteConfig:
    type: fortinet.static.route
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
           implementation: fortinet.fortinet_plugin.tasks.route_config
           executor: central_deployment_agent
           inputs:
               gateway: { get_property: [external_network_subnet, subnet, gateway_ip] }

    relationships:
      - target: FortinetHost
        type: cloudify.relationships.contained_in
      - target: FortinetPortConfig
        type: cloudify.relationships.depends_on

# Create floating ip to access admin gui

  admin_managment_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: { get_input: external_network_name }

#  Create LAN network

  lan_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: lan_network_name }

  lan_network_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: lan_network_subnet_name }
      subnet:
        ip_version: 4
        cidr: 192.168.122.99/24
        gateway_ip: 192.168.1.99
    relationships:
      - target: lan_network
        type: cloudify.relationships.contained_in

  lan_network_port:
    type: cloudify.openstack.nodes.Port
    properties:
      resource_id: { get_input: lan_network_port_name }
    relationships:
      - type: cloudify.relationships.contained_in
        target: lan_network
      - type: cloudify.relationships.depends_on
        target: lan_network_subnet

## Managment network will act as external network

#  Create external network

  external_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: external_network_name }

  external_network_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: external_network_subnet_name }
      subnet:
        dns_nameservers: [8.8.8.8]
        ip_version: 4
        cidr: 10.20.1.1/24
        gateway_ip: 10.20.1.2
    relationships:
      - target: external_network
        type: cloudify.relationships.contained_in

  external_network_port:
    type: cloudify.openstack.nodes.Port
    properties:
      resource_id: { get_input: external_network_port_name }
    relationships:
      - type: cloudify.relationships.contained_in
        target: external_network
      - type: cloudify.relationships.depends_on
        target: external_network_subnet

