tosca_definitions_version: cloudify_dsl_1_2

##################
# Fortinet FW VNF
##################

imports:
    - http://172.60.0.4:8000/cloudify-types.yaml
    - http://172.60.0.4:8000/openstack-plugin.yaml
    - http://172.60.0.4:8000/fabric-plugin.yaml
#    - plugins/cloudify-fortinet-plugin/plugin.yaml

inputs:

  agent_user:
    default: admin

  fortinet_image:
   default: '3d8edfea-f1ba-44cc-93f2-5339ca875d9a' # snapshot FortiGate_3.2_CFY_VNF - dhcp image
#   default: 'd9648527-6d9b-468c-9d5d-4fdf235c20be' # original
#    default: '7f5196a5-db06-4a47-93c1-54ca623c8b8e' # FortiGate_static_CFY_VNF

  flavor:
    default: '3'

  agent_password:
    default: admin

# inpute from composition
  lb_network:
    type: string
    default: Tenant-a-LBnetwork

# inpute from composition
  lb_network_subnet:
    type: string
    default: Tenant-a-LBnetwork-subnet

# inpute from composition
  app_network:
    type: string
    default: APPnetwork

# inpute from composition
  app_network_subnet:
    type: string
    default: APPnetwork-subnet

  external_network_name:
    type: string
    default: VIO-External-01_VLAN301



node_templates:
  FortinetHost:
    type: cloudify.openstack.nodes.Server
    properties:
      install_agent: false
      image: { get_input: fortinet_image }
      flavor: { get_input: flavor }
    relationships:

#      - target: app_network
#        type: cloudify.relationships.connected_to 

#      - target: lb_network
#        type: cloudify.relationships.connected_to

      - target: server_float_ip
        type: cloudify.openstack.server_connected_to_floating_ip

#
      - target: lb_network_port
        type: cloudify.openstack.server_connected_to_port
      - target: app_network_port
        type: cloudify.openstack.server_connected_to_port

#  LB network

  lb_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: lb_network }
      use_external_resource : false #true

  lb_network_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: lb_network_subnet }
      use_external_resource : false #true
      subnet:
        ip_version: 4
        cidr: 172.30.0.0/24
#        gateway_ip: 172.30.0.254
    relationships:
      - target: lb_network
        type: cloudify.relationships.contained_in

  lb_network_port:
    type: cloudify.openstack.nodes.Port
    properties:
      use_external_resource : false
#      fixed_ip: 172.30.0.3
    relationships:
      - type: cloudify.relationships.contained_in
        target: lb_network
      - type: cloudify.relationships.depends_on
        target: lb_network_subnet

#  APP network

  app_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: app_network }
      use_external_resource : false #true

  app_network_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: app_network_subnet }
      use_external_resource : false #true
      subnet:
        ip_version: 4
        cidr: 172.20.0.0/29
#        gateway_ip: 172.20.0.1
    relationships:
      - target: app_network
        type: cloudify.relationships.contained_in

  app_network_port:
    type: cloudify.openstack.nodes.Port
    properties:
      use_external_resource : false
#      fixed_ip: 172.20.0.3
    relationships:
      - type: cloudify.relationships.contained_in
        target: app_network
      - type: cloudify.relationships.depends_on
        target: app_network_subnet

  server_float_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: { get_input: external_network_name }

outputs:
  firewall_netip:
    value:
      fw_ip2: { get_attribute: [ app_network_port, fixed_ip_address ]}
      lb_ip: { get_attribute: [ lb_network_port, fixed_ip_address ]}

